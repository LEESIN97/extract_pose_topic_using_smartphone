"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),MocapInfoRefStruct=StructType({mocap4r2_source:primitiveTypes.string,ros_version_source:primitiveTypes.int8,topics:StringWrapper.refObjectArrayType}),MocapInfoRefArray=ArrayType(MocapInfoRefStruct),MocapInfoRefStructArray=StructType({data:MocapInfoRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class MocapInfoWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new MocapInfoRefStruct(e._refObject.toObject()),this._wrapperFields.mocap4r2_source=new StringWrapper(e._wrapperFields.mocap4r2_source),this._wrapperFields.topics=StringWrapper.createArray(),this._wrapperFields.topics.copy(e._wrapperFields.topics),this.topics=e.topics):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new MocapInfoRefStruct,this._wrapperFields.mocap4r2_source=new StringWrapper,this._wrapperFields.topics=StringWrapper.createArray(),this._topicsArray=[]}static createFromRefObject(e){let r=new MocapInfoWrapper;return r.copyRefObject(e),r}static createArray(){return new MocapInfoArrayWrapper}static get ArrayType(){return MocapInfoArrayWrapper}static get refObjectArrayType(){return MocapInfoRefStructArray}static get refObjectType(){return MocapInfoRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.mocap4r2_source.freeze(e),this._refObject.mocap4r2_source=this._wrapperFields.mocap4r2_source.refObject,e?this._wrapperFields.topics.fill([]):this._wrapperFields.topics.fill(this._topicsArray),this._wrapperFields.topics.freeze(e),this._refObject.topics=this._wrapperFields.topics.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.mocap4r2_source.data=e.mocap4r2_source.data,this._refObject.ros_version_source=e.ros_version_source,e.topics.data.length=e.topics.size;for(let r=0;r<e.topics.size;r++)this._topicsArray[r]=e.topics.data[r].data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.mocap4r2_source),0!=e.topics.size&&(StringWrapper.ArrayType.freeArray(e.topics),StringWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.topics,StringWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){MocapInfoWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"mocap4r2_control_msgs",subFolder:"msg",interfaceName:"MocapInfo"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get mocap4r2_source(){return this._wrapperFields.mocap4r2_source.data}set mocap4r2_source(e){this._wrapperFields.mocap4r2_source.data=e}get ros_version_source(){return this._refObject.ros_version_source}set ros_version_source(e){this._refObject.ros_version_source=e}get topics(){return this._topicsArray}set topics(e){this._topicsArray=e}copyRefObject(e){this._refObject=new MocapInfoRefStruct(e.toObject()),this._wrapperFields.mocap4r2_source.copyRefObject(this._refObject.mocap4r2_source),e.topics.data.length=e.topics.size;for(let r=0;r<e.topics.size;r++)this._topicsArray[r]=e.topics.data[r].data}copy(e){this._refObject=new MocapInfoRefStruct(e._refObject.toObject()),this._wrapperFields.mocap4r2_source.copy(e._wrapperFields.mocap4r2_source),this._topicsArray=e._topicsArray.slice()}static get classType(){return MocapInfoWrapper}static get ROSMessageDef(){return{constants:[{type:"int8",name:"ROS2",value:0},{type:"int8",name:"ROS1",value:1}],fields:[{name:"mocap4r2_source",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"ros_version_source",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"int8",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"topics",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"mocap4r2_control_msgs",type:"MocapInfo",stringUpperBound:null,isPrimitiveType:!1},msgName:"MocapInfo"}}hasMember(e){return-1!==["mocap4r2_source","ros_version_source","topics"].indexOf(e)}}class MocapInfoArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof MocapInfoWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new MocapInfoWrapper(e)})}freeze(e){this._wrappers.forEach((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to MocapInfoArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to MocapInfoArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new MocapInfoRefArray(e),this._refObject=new MocapInfoRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new MocapInfoWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof MocapInfoArrayWrapper))throw new TypeError('Invalid argument: should provide "MocapInfoArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)MocapInfoWrapper.freeStruct(r[t])}static get elementType(){return MocapInfoWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return MocapInfoArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}Object.defineProperty(MocapInfoWrapper,"ROS2",{value:0,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(MocapInfoWrapper,"ROS1",{value:1,writable:!1,enumerable:!0,configurable:!0}),module.exports=MocapInfoWrapper;