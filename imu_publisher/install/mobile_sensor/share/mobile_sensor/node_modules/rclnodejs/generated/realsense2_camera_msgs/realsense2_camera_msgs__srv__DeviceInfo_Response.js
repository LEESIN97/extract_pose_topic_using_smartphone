"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),DeviceInfo_ResponseRefStruct=StructType({device_name:primitiveTypes.string,serial_number:primitiveTypes.string,firmware_version:primitiveTypes.string,usb_type_descriptor:primitiveTypes.string,firmware_update_id:primitiveTypes.string,sensors:primitiveTypes.string,physical_port:primitiveTypes.string}),DeviceInfo_ResponseRefArray=ArrayType(DeviceInfo_ResponseRefStruct),DeviceInfo_ResponseRefStructArray=StructType({data:DeviceInfo_ResponseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class DeviceInfo_ResponseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new DeviceInfo_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.device_name=new StringWrapper(e._wrapperFields.device_name),this._wrapperFields.serial_number=new StringWrapper(e._wrapperFields.serial_number),this._wrapperFields.firmware_version=new StringWrapper(e._wrapperFields.firmware_version),this._wrapperFields.usb_type_descriptor=new StringWrapper(e._wrapperFields.usb_type_descriptor),this._wrapperFields.firmware_update_id=new StringWrapper(e._wrapperFields.firmware_update_id),this._wrapperFields.sensors=new StringWrapper(e._wrapperFields.sensors),this._wrapperFields.physical_port=new StringWrapper(e._wrapperFields.physical_port)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new DeviceInfo_ResponseRefStruct,this._wrapperFields.device_name=new StringWrapper,this._wrapperFields.serial_number=new StringWrapper,this._wrapperFields.firmware_version=new StringWrapper,this._wrapperFields.usb_type_descriptor=new StringWrapper,this._wrapperFields.firmware_update_id=new StringWrapper,this._wrapperFields.sensors=new StringWrapper,this._wrapperFields.physical_port=new StringWrapper}static createFromRefObject(e){let r=new DeviceInfo_ResponseWrapper;return r.copyRefObject(e),r}static createArray(){return new DeviceInfo_ResponseArrayWrapper}static get ArrayType(){return DeviceInfo_ResponseArrayWrapper}static get refObjectArrayType(){return DeviceInfo_ResponseRefStructArray}static get refObjectType(){return DeviceInfo_ResponseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.device_name.freeze(e),this._refObject.device_name=this._wrapperFields.device_name.refObject,e&&this._wrapperFields.serial_number.freeze(e),this._refObject.serial_number=this._wrapperFields.serial_number.refObject,e&&this._wrapperFields.firmware_version.freeze(e),this._refObject.firmware_version=this._wrapperFields.firmware_version.refObject,e&&this._wrapperFields.usb_type_descriptor.freeze(e),this._refObject.usb_type_descriptor=this._wrapperFields.usb_type_descriptor.refObject,e&&this._wrapperFields.firmware_update_id.freeze(e),this._refObject.firmware_update_id=this._wrapperFields.firmware_update_id.refObject,e&&this._wrapperFields.sensors.freeze(e),this._refObject.sensors=this._wrapperFields.sensors.refObject,e&&this._wrapperFields.physical_port.freeze(e),this._refObject.physical_port=this._wrapperFields.physical_port.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.device_name.data=e.device_name.data,this._wrapperFields.serial_number.data=e.serial_number.data,this._wrapperFields.firmware_version.data=e.firmware_version.data,this._wrapperFields.usb_type_descriptor.data=e.usb_type_descriptor.data,this._wrapperFields.firmware_update_id.data=e.firmware_update_id.data,this._wrapperFields.sensors.data=e.sensors.data,this._wrapperFields.physical_port.data=e.physical_port.data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.device_name),StringWrapper.freeStruct(e.serial_number),StringWrapper.freeStruct(e.firmware_version),StringWrapper.freeStruct(e.usb_type_descriptor),StringWrapper.freeStruct(e.firmware_update_id),StringWrapper.freeStruct(e.sensors),StringWrapper.freeStruct(e.physical_port)}static destoryRawROS(e){DeviceInfo_ResponseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"realsense2_camera_msgs",subFolder:"srv",interfaceName:"DeviceInfo_Response"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get device_name(){return this._wrapperFields.device_name.data}set device_name(e){this._wrapperFields.device_name.data=e}get serial_number(){return this._wrapperFields.serial_number.data}set serial_number(e){this._wrapperFields.serial_number.data=e}get firmware_version(){return this._wrapperFields.firmware_version.data}set firmware_version(e){this._wrapperFields.firmware_version.data=e}get usb_type_descriptor(){return this._wrapperFields.usb_type_descriptor.data}set usb_type_descriptor(e){this._wrapperFields.usb_type_descriptor.data=e}get firmware_update_id(){return this._wrapperFields.firmware_update_id.data}set firmware_update_id(e){this._wrapperFields.firmware_update_id.data=e}get sensors(){return this._wrapperFields.sensors.data}set sensors(e){this._wrapperFields.sensors.data=e}get physical_port(){return this._wrapperFields.physical_port.data}set physical_port(e){this._wrapperFields.physical_port.data=e}copyRefObject(e){this._refObject=new DeviceInfo_ResponseRefStruct(e.toObject()),this._wrapperFields.device_name.copyRefObject(this._refObject.device_name),this._wrapperFields.serial_number.copyRefObject(this._refObject.serial_number),this._wrapperFields.firmware_version.copyRefObject(this._refObject.firmware_version),this._wrapperFields.usb_type_descriptor.copyRefObject(this._refObject.usb_type_descriptor),this._wrapperFields.firmware_update_id.copyRefObject(this._refObject.firmware_update_id),this._wrapperFields.sensors.copyRefObject(this._refObject.sensors),this._wrapperFields.physical_port.copyRefObject(this._refObject.physical_port)}copy(e){this._refObject=new DeviceInfo_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.device_name.copy(e._wrapperFields.device_name),this._wrapperFields.serial_number.copy(e._wrapperFields.serial_number),this._wrapperFields.firmware_version.copy(e._wrapperFields.firmware_version),this._wrapperFields.usb_type_descriptor.copy(e._wrapperFields.usb_type_descriptor),this._wrapperFields.firmware_update_id.copy(e._wrapperFields.firmware_update_id),this._wrapperFields.sensors.copy(e._wrapperFields.sensors),this._wrapperFields.physical_port.copy(e._wrapperFields.physical_port)}static get classType(){return DeviceInfo_ResponseWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"device_name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"serial_number",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"firmware_version",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"usb_type_descriptor",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"firmware_update_id",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"sensors",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"physical_port",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"realsense2_camera_msgs",type:"DeviceInfo_Response",stringUpperBound:null,isPrimitiveType:!1},msgName:"DeviceInfo_Response"}}hasMember(e){return-1!==["device_name","serial_number","firmware_version","usb_type_descriptor","firmware_update_id","sensors","physical_port"].indexOf(e)}}class DeviceInfo_ResponseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof DeviceInfo_ResponseWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new DeviceInfo_ResponseWrapper(e)})}freeze(e){this._wrappers.forEach((r,i)=>{r.freeze(e),this._refArray[i]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to DeviceInfo_ResponseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to DeviceInfo_ResponseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new DeviceInfo_ResponseRefArray(e),this._refObject=new DeviceInfo_ResponseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new DeviceInfo_ResponseWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof DeviceInfo_ResponseArrayWrapper))throw new TypeError('Invalid argument: should provide "DeviceInfo_ResponseArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let i=0;i<e.size;i++)DeviceInfo_ResponseWrapper.freeStruct(r[i])}static get elementType(){return DeviceInfo_ResponseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return DeviceInfo_ResponseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=DeviceInfo_ResponseWrapper;