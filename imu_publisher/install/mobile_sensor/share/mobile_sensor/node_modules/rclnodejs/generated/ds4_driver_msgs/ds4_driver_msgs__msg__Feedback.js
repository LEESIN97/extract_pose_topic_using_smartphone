"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),FeedbackRefStruct=StructType({set_led:primitiveTypes.bool,led_r:primitiveTypes.float32,led_g:primitiveTypes.float32,led_b:primitiveTypes.float32,set_led_flash:primitiveTypes.bool,led_flash_on:primitiveTypes.float32,led_flash_off:primitiveTypes.float32,set_rumble:primitiveTypes.bool,rumble_duration:primitiveTypes.float32,rumble_small:primitiveTypes.float32,rumble_big:primitiveTypes.float32}),FeedbackRefArray=ArrayType(FeedbackRefStruct),FeedbackRefStructArray=StructType({data:FeedbackRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class FeedbackWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?this._refObject=new FeedbackRefStruct(e._refObject.toObject()):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new FeedbackRefStruct}static createFromRefObject(e){let r=new FeedbackWrapper;return r.copyRefObject(e),r}static createArray(){return new FeedbackArrayWrapper}static get ArrayType(){return FeedbackArrayWrapper}static get refObjectArrayType(){return FeedbackRefStructArray}static get refObjectType(){return FeedbackRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._refObject.set_led=e.set_led,this._refObject.led_r=e.led_r,this._refObject.led_g=e.led_g,this._refObject.led_b=e.led_b,this._refObject.set_led_flash=e.set_led_flash,this._refObject.led_flash_on=e.led_flash_on,this._refObject.led_flash_off=e.led_flash_off,this._refObject.set_rumble=e.set_rumble,this._refObject.rumble_duration=e.rumble_duration,this._refObject.rumble_small=e.rumble_small,this._refObject.rumble_big=e.rumble_big}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){}static destoryRawROS(e){FeedbackWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"ds4_driver_msgs",subFolder:"msg",interfaceName:"Feedback"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get set_led(){return this._refObject.set_led}set set_led(e){this._refObject.set_led=e}get led_r(){return this._refObject.led_r}set led_r(e){this._refObject.led_r=e}get led_g(){return this._refObject.led_g}set led_g(e){this._refObject.led_g=e}get led_b(){return this._refObject.led_b}set led_b(e){this._refObject.led_b=e}get set_led_flash(){return this._refObject.set_led_flash}set set_led_flash(e){this._refObject.set_led_flash=e}get led_flash_on(){return this._refObject.led_flash_on}set led_flash_on(e){this._refObject.led_flash_on=e}get led_flash_off(){return this._refObject.led_flash_off}set led_flash_off(e){this._refObject.led_flash_off=e}get set_rumble(){return this._refObject.set_rumble}set set_rumble(e){this._refObject.set_rumble=e}get rumble_duration(){return this._refObject.rumble_duration}set rumble_duration(e){this._refObject.rumble_duration=e}get rumble_small(){return this._refObject.rumble_small}set rumble_small(e){this._refObject.rumble_small=e}get rumble_big(){return this._refObject.rumble_big}set rumble_big(e){this._refObject.rumble_big=e}copyRefObject(e){this._refObject=new FeedbackRefStruct(e.toObject())}copy(e){this._refObject=new FeedbackRefStruct(e._refObject.toObject())}static get classType(){return FeedbackWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"set_led",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"bool",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"led_r",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"led_g",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"led_b",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"set_led_flash",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"bool",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"led_flash_on",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"led_flash_off",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"set_rumble",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"bool",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"rumble_duration",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"rumble_small",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"rumble_big",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"ds4_driver_msgs",type:"Feedback",stringUpperBound:null,isPrimitiveType:!1},msgName:"Feedback"}}hasMember(e){return-1!==["set_led","led_r","led_g","led_b","set_led_flash","led_flash_on","led_flash_off","set_rumble","rumble_duration","rumble_small","rumble_big"].indexOf(e)}}class FeedbackArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof FeedbackWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new FeedbackWrapper(e)})}freeze(e){this._wrappers.forEach((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to FeedbackArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to FeedbackArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new FeedbackRefArray(e),this._refObject=new FeedbackRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new FeedbackWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof FeedbackArrayWrapper))throw new TypeError('Invalid argument: should provide "FeedbackArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)FeedbackWrapper.freeStruct(r[t])}static get elementType(){return FeedbackWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return FeedbackArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=FeedbackWrapper;