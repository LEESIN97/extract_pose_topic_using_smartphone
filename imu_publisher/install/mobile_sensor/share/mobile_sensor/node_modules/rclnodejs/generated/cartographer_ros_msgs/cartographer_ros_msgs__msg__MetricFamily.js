"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),MetricWrapper=require("../../generated/cartographer_ros_msgs/cartographer_ros_msgs__msg__Metric.js"),MetricFamilyRefStruct=StructType({name:primitiveTypes.string,description:primitiveTypes.string,metrics:MetricWrapper.refObjectArrayType}),MetricFamilyRefArray=ArrayType(MetricFamilyRefStruct),MetricFamilyRefStructArray=StructType({data:MetricFamilyRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class MetricFamilyWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new MetricFamilyRefStruct(e._refObject.toObject()),this._wrapperFields.name=new StringWrapper(e._wrapperFields.name),this._wrapperFields.description=new StringWrapper(e._wrapperFields.description),this._wrapperFields.metrics=MetricWrapper.createArray(),this._wrapperFields.metrics.copy(e._wrapperFields.metrics)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new MetricFamilyRefStruct,this._wrapperFields.name=new StringWrapper,this._wrapperFields.description=new StringWrapper,this._wrapperFields.metrics=MetricWrapper.createArray()}static createFromRefObject(e){let r=new MetricFamilyWrapper;return r.copyRefObject(e),r}static createArray(){return new MetricFamilyArrayWrapper}static get ArrayType(){return MetricFamilyArrayWrapper}static get refObjectArrayType(){return MetricFamilyRefStructArray}static get refObjectType(){return MetricFamilyRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.name.freeze(e),this._refObject.name=this._wrapperFields.name.refObject,e&&this._wrapperFields.description.freeze(e),this._refObject.description=this._wrapperFields.description.refObject,e&&this._wrapperFields.metrics.fill([]),this._wrapperFields.metrics.freeze(e),this._refObject.metrics=this._wrapperFields.metrics.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.name.data=e.name.data,this._wrapperFields.description.data=e.description.data,this._wrapperFields.metrics.copyRefObject(e.metrics)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.name),StringWrapper.freeStruct(e.description),0!=e.metrics.size&&(MetricWrapper.ArrayType.freeArray(e.metrics),MetricWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.metrics,MetricWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){MetricFamilyWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"cartographer_ros_msgs",subFolder:"msg",interfaceName:"MetricFamily"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get name(){return this._wrapperFields.name.data}set name(e){this._wrapperFields.name.data=e}get description(){return this._wrapperFields.description.data}set description(e){this._wrapperFields.description.data=e}get metrics(){return this._wrapperFields.metrics}set metrics(e){this._wrapperFields.metrics.fill(e)}copyRefObject(e){this._refObject=new MetricFamilyRefStruct(e.toObject()),this._wrapperFields.name.copyRefObject(this._refObject.name),this._wrapperFields.description.copyRefObject(this._refObject.description),this._wrapperFields.metrics.copyRefObject(this._refObject.metrics)}copy(e){this._refObject=new MetricFamilyRefStruct(e._refObject.toObject()),this._wrapperFields.name.copy(e._wrapperFields.name),this._wrapperFields.description.copy(e._wrapperFields.description),this._wrapperFields.metrics.copy(e._wrapperFields.metrics)}static get classType(){return MetricFamilyWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"description",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"metrics",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"cartographer_ros_msgs",type:"Metric",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"cartographer_ros_msgs",type:"MetricFamily",stringUpperBound:null,isPrimitiveType:!1},msgName:"MetricFamily"}}hasMember(e){return-1!==["name","description","metrics"].indexOf(e)}}class MetricFamilyArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof MetricFamilyWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new MetricFamilyWrapper(e)})}freeze(e){this._wrappers.forEach((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to MetricFamilyArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to MetricFamilyArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new MetricFamilyRefArray(e),this._refObject=new MetricFamilyRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new MetricFamilyWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof MetricFamilyArrayWrapper))throw new TypeError('Invalid argument: should provide "MetricFamilyArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)MetricFamilyWrapper.freeStruct(r[t])}static get elementType(){return MetricFamilyWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return MetricFamilyArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=MetricFamilyWrapper;