"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),UInt8Wrapper=require("../../generated/std_msgs/std_msgs__msg__UInt8.js"),PoseWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Pose.js"),SubmapTextureRefStruct=StructType({cells:UInt8Wrapper.refObjectArrayType,width:primitiveTypes.int32,height:primitiveTypes.int32,resolution:primitiveTypes.float64,slice_pose:PoseWrapper.refObjectType}),SubmapTextureRefArray=ArrayType(SubmapTextureRefStruct),SubmapTextureRefStructArray=StructType({data:SubmapTextureRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class SubmapTextureWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new SubmapTextureRefStruct(e._refObject.toObject()),this._wrapperFields.cells=UInt8Wrapper.createArray(),this._wrapperFields.cells.copy(e._wrapperFields.cells),this._wrapperFields.slice_pose=new PoseWrapper(e._wrapperFields.slice_pose)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new SubmapTextureRefStruct,this._wrapperFields.cells=UInt8Wrapper.createArray(),this._wrapperFields.slice_pose=new PoseWrapper}static createFromRefObject(e){let r=new SubmapTextureWrapper;return r.copyRefObject(e),r}static createArray(){return new SubmapTextureArrayWrapper}static get ArrayType(){return SubmapTextureArrayWrapper}static get refObjectArrayType(){return SubmapTextureRefStructArray}static get refObjectType(){return SubmapTextureRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.cells.fill(Uint8Array.from([])),this._wrapperFields.cells.freeze(e),this._refObject.cells=this._wrapperFields.cells.refObject,this._wrapperFields.slice_pose.freeze(e),this._refObject.slice_pose=this._wrapperFields.slice_pose.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.cells.copyRefObject(e.cells),this._refObject.width=e.width,this._refObject.height=e.height,this._refObject.resolution=e.resolution,this._wrapperFields.slice_pose.copyRefObject(e.slice_pose)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){0!=e.cells.size&&(UInt8Wrapper.ArrayType.freeArray(e.cells),UInt8Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.cells,UInt8Wrapper.refObjectArrayType,"data")),PoseWrapper.freeStruct(e.slice_pose)}static destoryRawROS(e){SubmapTextureWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"cartographer_ros_msgs",subFolder:"msg",interfaceName:"SubmapTexture"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get cells(){return this._wrapperFields.cells.data}set cells(e){this._wrapperFields.cells.fill(e)}get width(){return this._refObject.width}set width(e){this._refObject.width=e}get height(){return this._refObject.height}set height(e){this._refObject.height=e}get resolution(){return this._refObject.resolution}set resolution(e){this._refObject.resolution=e}get slice_pose(){return this._wrapperFields.slice_pose}set slice_pose(e){e instanceof PoseWrapper?this._wrapperFields.slice_pose.copy(e):this._wrapperFields.slice_pose.copy(new PoseWrapper(e))}copyRefObject(e){this._refObject=new SubmapTextureRefStruct(e.toObject()),this._wrapperFields.cells.copyRefObject(this._refObject.cells),this._wrapperFields.slice_pose.copyRefObject(this._refObject.slice_pose)}copy(e){this._refObject=new SubmapTextureRefStruct(e._refObject.toObject()),this._wrapperFields.cells.copy(e._wrapperFields.cells),this._wrapperFields.slice_pose.copy(e._wrapperFields.slice_pose)}static get classType(){return SubmapTextureWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"cells",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"uint8",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"width",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"int32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"height",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"int32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"resolution",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"slice_pose",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Pose",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"cartographer_ros_msgs",type:"SubmapTexture",stringUpperBound:null,isPrimitiveType:!1},msgName:"SubmapTexture"}}hasMember(e){return-1!==["cells","width","height","resolution","slice_pose"].indexOf(e)}}class SubmapTextureArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof SubmapTextureWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new SubmapTextureWrapper(e)})}freeze(e){this._wrappers.forEach((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to SubmapTextureArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to SubmapTextureArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new SubmapTextureRefArray(e),this._refObject=new SubmapTextureRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new SubmapTextureWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof SubmapTextureArrayWrapper))throw new TypeError('Invalid argument: should provide "SubmapTextureArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)SubmapTextureWrapper.freeStruct(r[t])}static get elementType(){return SubmapTextureWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return SubmapTextureArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=SubmapTextureWrapper;