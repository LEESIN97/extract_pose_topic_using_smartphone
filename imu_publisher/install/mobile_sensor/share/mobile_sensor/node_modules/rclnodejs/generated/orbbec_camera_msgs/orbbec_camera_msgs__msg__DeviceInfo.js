"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),HeaderWrapper=require("../../generated/std_msgs/std_msgs__msg__Header.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),DeviceInfoRefStruct=StructType({header:HeaderWrapper.refObjectType,name:primitiveTypes.string,serial_number:primitiveTypes.string,firmware_version:primitiveTypes.string,supported_min_sdk_version:primitiveTypes.string,hardware_version:primitiveTypes.string}),DeviceInfoRefArray=ArrayType(DeviceInfoRefStruct),DeviceInfoRefStructArray=StructType({data:DeviceInfoRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class DeviceInfoWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new DeviceInfoRefStruct(e._refObject.toObject()),this._wrapperFields.header=new HeaderWrapper(e._wrapperFields.header),this._wrapperFields.name=new StringWrapper(e._wrapperFields.name),this._wrapperFields.serial_number=new StringWrapper(e._wrapperFields.serial_number),this._wrapperFields.firmware_version=new StringWrapper(e._wrapperFields.firmware_version),this._wrapperFields.supported_min_sdk_version=new StringWrapper(e._wrapperFields.supported_min_sdk_version),this._wrapperFields.hardware_version=new StringWrapper(e._wrapperFields.hardware_version)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new DeviceInfoRefStruct,this._wrapperFields.header=new HeaderWrapper,this._wrapperFields.name=new StringWrapper,this._wrapperFields.serial_number=new StringWrapper,this._wrapperFields.firmware_version=new StringWrapper,this._wrapperFields.supported_min_sdk_version=new StringWrapper,this._wrapperFields.hardware_version=new StringWrapper}static createFromRefObject(e){let r=new DeviceInfoWrapper;return r.copyRefObject(e),r}static createArray(){return new DeviceInfoArrayWrapper}static get ArrayType(){return DeviceInfoArrayWrapper}static get refObjectArrayType(){return DeviceInfoRefStructArray}static get refObjectType(){return DeviceInfoRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.header.freeze(e),this._refObject.header=this._wrapperFields.header.refObject,e&&this._wrapperFields.name.freeze(e),this._refObject.name=this._wrapperFields.name.refObject,e&&this._wrapperFields.serial_number.freeze(e),this._refObject.serial_number=this._wrapperFields.serial_number.refObject,e&&this._wrapperFields.firmware_version.freeze(e),this._refObject.firmware_version=this._wrapperFields.firmware_version.refObject,e&&this._wrapperFields.supported_min_sdk_version.freeze(e),this._refObject.supported_min_sdk_version=this._wrapperFields.supported_min_sdk_version.refObject,e&&this._wrapperFields.hardware_version.freeze(e),this._refObject.hardware_version=this._wrapperFields.hardware_version.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.header.copyRefObject(e.header),this._wrapperFields.name.data=e.name.data,this._wrapperFields.serial_number.data=e.serial_number.data,this._wrapperFields.firmware_version.data=e.firmware_version.data,this._wrapperFields.supported_min_sdk_version.data=e.supported_min_sdk_version.data,this._wrapperFields.hardware_version.data=e.hardware_version.data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){HeaderWrapper.freeStruct(e.header),StringWrapper.freeStruct(e.name),StringWrapper.freeStruct(e.serial_number),StringWrapper.freeStruct(e.firmware_version),StringWrapper.freeStruct(e.supported_min_sdk_version),StringWrapper.freeStruct(e.hardware_version)}static destoryRawROS(e){DeviceInfoWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"orbbec_camera_msgs",subFolder:"msg",interfaceName:"DeviceInfo"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get header(){return this._wrapperFields.header}set header(e){e instanceof HeaderWrapper?this._wrapperFields.header.copy(e):this._wrapperFields.header.copy(new HeaderWrapper(e))}get name(){return this._wrapperFields.name.data}set name(e){this._wrapperFields.name.data=e}get serial_number(){return this._wrapperFields.serial_number.data}set serial_number(e){this._wrapperFields.serial_number.data=e}get firmware_version(){return this._wrapperFields.firmware_version.data}set firmware_version(e){this._wrapperFields.firmware_version.data=e}get supported_min_sdk_version(){return this._wrapperFields.supported_min_sdk_version.data}set supported_min_sdk_version(e){this._wrapperFields.supported_min_sdk_version.data=e}get hardware_version(){return this._wrapperFields.hardware_version.data}set hardware_version(e){this._wrapperFields.hardware_version.data=e}copyRefObject(e){this._refObject=new DeviceInfoRefStruct(e.toObject()),this._wrapperFields.header.copyRefObject(this._refObject.header),this._wrapperFields.name.copyRefObject(this._refObject.name),this._wrapperFields.serial_number.copyRefObject(this._refObject.serial_number),this._wrapperFields.firmware_version.copyRefObject(this._refObject.firmware_version),this._wrapperFields.supported_min_sdk_version.copyRefObject(this._refObject.supported_min_sdk_version),this._wrapperFields.hardware_version.copyRefObject(this._refObject.hardware_version)}copy(e){this._refObject=new DeviceInfoRefStruct(e._refObject.toObject()),this._wrapperFields.header.copy(e._wrapperFields.header),this._wrapperFields.name.copy(e._wrapperFields.name),this._wrapperFields.serial_number.copy(e._wrapperFields.serial_number),this._wrapperFields.firmware_version.copy(e._wrapperFields.firmware_version),this._wrapperFields.supported_min_sdk_version.copy(e._wrapperFields.supported_min_sdk_version),this._wrapperFields.hardware_version.copy(e._wrapperFields.hardware_version)}static get classType(){return DeviceInfoWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"header",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"std_msgs",type:"Header",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"serial_number",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"firmware_version",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"supported_min_sdk_version",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"hardware_version",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"orbbec_camera_msgs",type:"DeviceInfo",stringUpperBound:null,isPrimitiveType:!1},msgName:"DeviceInfo"}}hasMember(e){return-1!==["header","name","serial_number","firmware_version","supported_min_sdk_version","hardware_version"].indexOf(e)}}class DeviceInfoArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof DeviceInfoWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new DeviceInfoWrapper(e)})}freeze(e){this._wrappers.forEach((r,i)=>{r.freeze(e),this._refArray[i]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to DeviceInfoArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to DeviceInfoArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new DeviceInfoRefArray(e),this._refObject=new DeviceInfoRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new DeviceInfoWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof DeviceInfoArrayWrapper))throw new TypeError('Invalid argument: should provide "DeviceInfoArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let i=0;i<e.size;i++)DeviceInfoWrapper.freeStruct(r[i])}static get elementType(){return DeviceInfoWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return DeviceInfoArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=DeviceInfoWrapper;