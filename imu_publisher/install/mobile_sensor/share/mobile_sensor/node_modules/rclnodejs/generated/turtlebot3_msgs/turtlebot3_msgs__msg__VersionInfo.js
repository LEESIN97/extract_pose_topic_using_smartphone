"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),VersionInfoRefStruct=StructType({hardware:primitiveTypes.string,firmware:primitiveTypes.string,software:primitiveTypes.string}),VersionInfoRefArray=ArrayType(VersionInfoRefStruct),VersionInfoRefStructArray=StructType({data:VersionInfoRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class VersionInfoWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new VersionInfoRefStruct(e._refObject.toObject()),this._wrapperFields.hardware=new StringWrapper(e._wrapperFields.hardware),this._wrapperFields.firmware=new StringWrapper(e._wrapperFields.firmware),this._wrapperFields.software=new StringWrapper(e._wrapperFields.software)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new VersionInfoRefStruct,this._wrapperFields.hardware=new StringWrapper,this._wrapperFields.firmware=new StringWrapper,this._wrapperFields.software=new StringWrapper}static createFromRefObject(e){let r=new VersionInfoWrapper;return r.copyRefObject(e),r}static createArray(){return new VersionInfoArrayWrapper}static get ArrayType(){return VersionInfoArrayWrapper}static get refObjectArrayType(){return VersionInfoRefStructArray}static get refObjectType(){return VersionInfoRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.hardware.freeze(e),this._refObject.hardware=this._wrapperFields.hardware.refObject,e&&this._wrapperFields.firmware.freeze(e),this._refObject.firmware=this._wrapperFields.firmware.refObject,e&&this._wrapperFields.software.freeze(e),this._refObject.software=this._wrapperFields.software.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.hardware.data=e.hardware.data,this._wrapperFields.firmware.data=e.firmware.data,this._wrapperFields.software.data=e.software.data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.hardware),StringWrapper.freeStruct(e.firmware),StringWrapper.freeStruct(e.software)}static destoryRawROS(e){VersionInfoWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"turtlebot3_msgs",subFolder:"msg",interfaceName:"VersionInfo"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get hardware(){return this._wrapperFields.hardware.data}set hardware(e){this._wrapperFields.hardware.data=e}get firmware(){return this._wrapperFields.firmware.data}set firmware(e){this._wrapperFields.firmware.data=e}get software(){return this._wrapperFields.software.data}set software(e){this._wrapperFields.software.data=e}copyRefObject(e){this._refObject=new VersionInfoRefStruct(e.toObject()),this._wrapperFields.hardware.copyRefObject(this._refObject.hardware),this._wrapperFields.firmware.copyRefObject(this._refObject.firmware),this._wrapperFields.software.copyRefObject(this._refObject.software)}copy(e){this._refObject=new VersionInfoRefStruct(e._refObject.toObject()),this._wrapperFields.hardware.copy(e._wrapperFields.hardware),this._wrapperFields.firmware.copy(e._wrapperFields.firmware),this._wrapperFields.software.copy(e._wrapperFields.software)}static get classType(){return VersionInfoWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"hardware",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"firmware",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"software",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"turtlebot3_msgs",type:"VersionInfo",stringUpperBound:null,isPrimitiveType:!1},msgName:"VersionInfo"}}hasMember(e){return-1!==["hardware","firmware","software"].indexOf(e)}}class VersionInfoArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach((e,r)=>{e instanceof VersionInfoWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new VersionInfoWrapper(e)})}freeze(e){this._wrappers.forEach((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject}),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to VersionInfoArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to VersionInfoArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new VersionInfoRefArray(e),this._refObject=new VersionInfoRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new VersionInfoWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof VersionInfoArrayWrapper))throw new TypeError('Invalid argument: should provide "VersionInfoArrayWrapper".');this._resize(e.size),e._wrappers.forEach((e,r)=>{this._wrappers[r].copy(e)})}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)VersionInfoWrapper.freeStruct(r[t])}static get elementType(){return VersionInfoWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return VersionInfoArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=VersionInfoWrapper;